{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\broy9\\\\OneDrive\\\\Desktop\\\\TOPPR\\\\Quizmania-Level3-main\\\\src\\\\screens\\\\Login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport firebase from \"../FirebaseConfig\";\nimport BasicButton from \"../components/BasicButton\";\nimport LoginSignUpBtn from \"../components/LoginSignUpBtn\";\nimport SnackBar from \"../components/SnackBar\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      snackBarVisible = _useState8[0],\n      setSnackBarVisible = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      snackBarText = _useState10[0],\n      setSnackBarText = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      snackBarType = _useState12[0],\n      setSnackBarType = _useState12[1];\n\n  function handleLoginBtnClick() {\n    displayLoader();\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function _callee(user) {\n      var userId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              userId = user.user.uid;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"loggedUserEmail\", email));\n\n            case 4:\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"loggedUserId\", userId));\n\n            case 6:\n              hideLoader();\n              displaySnackBar(\"success\", \"Succesfully logged\");\n              navigation.push('Dashboard');\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              hideLoader();\n              displaySnackBar(\"error\", \"Something went wrong\");\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      hideLoader();\n      displaySnackBar(\"error\", errorMessage);\n    });\n  }\n\n  function handleSignUpBtnClick() {\n    navigation.navigate('Signup');\n  }\n\n  function displaySnackBar(type, text) {\n    setSnackBarType(type);\n    setSnackBarText(text);\n    setSnackBarVisible(true);\n  }\n\n  function hideSnackBar() {\n    setSnackBarVisible(false);\n  }\n\n  function displayLoader() {\n    setIsLoading(true);\n  }\n\n  function hideLoader() {\n    setIsLoading(false);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Email Address\"), React.createElement(TextInput, {\n    style: styles.inputField,\n    keyboardType: \"email-address\",\n    placeholder: \"Enter your registered email\",\n    value: email,\n    onChangeText: function onChangeText(val) {\n      return setEmail(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.inputField,\n    secureTextEntry: true,\n    placeholder: \"Enter password\",\n    value: password,\n    onChangeText: function onChangeText(val) {\n      return setPassword(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), React.createElement(BasicButton, {\n    text: \"Login\",\n    onPress: handleLoginBtnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), isLoading ? React.createElement(ActivityIndicator, {\n    style: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }) : null, React.createElement(LoginSignUpBtn, {\n    customStyle: styles.signup,\n    text: \"Don\\u2019t have an account?\",\n    btnText: \"Sign up\",\n    onPress: handleSignUpBtnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), snackBarVisible ? React.createElement(SnackBar, {\n    isVisible: snackBarVisible,\n    text: snackBarText,\n    type: snackBarType,\n    onClose: hideSnackBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }) : null);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    marginTop: 0,\n    paddingHorizontal: 30\n  },\n  title: {\n    fontWeight: '500',\n    fontSize: 20,\n    letterSpacing: 0.1,\n    color: '#2E2E2E'\n  },\n  form: {\n    marginVertical: 35\n  },\n  label: {\n    fontSize: 16,\n    lineHeight: 18,\n    color: '#666666',\n    marginBottom: 3\n  },\n  inputField: {\n    fontSize: 14,\n    borderBottomWidth: 1,\n    borderBottomColor: '#BFBFBF',\n    paddingVertical: 6\n  },\n  divider: {\n    paddingVertical: 8\n  },\n  loader: {\n    marginTop: 10\n  },\n  signup: {\n    marginTop: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/broy9/OneDrive/Desktop/TOPPR/Quizmania-Level3-main/src/screens/Login.js"],"names":["React","useState","AsyncStorage","firebase","BasicButton","LoginSignUpBtn","SnackBar","Login","navigation","email","setEmail","password","setPassword","isLoading","setIsLoading","snackBarVisible","setSnackBarVisible","snackBarText","setSnackBarText","snackBarType","setSnackBarType","handleLoginBtnClick","displayLoader","auth","signInWithEmailAndPassword","then","user","userId","uid","setItem","hideLoader","displaySnackBar","push","catch","error","errorCode","code","errorMessage","message","handleSignUpBtnClick","navigate","type","text","hideSnackBar","styles","container","form","label","inputField","val","divider","loader","signup","StyleSheet","create","flex","backgroundColor","marginTop","paddingHorizontal","title","fontWeight","fontSize","letterSpacing","color","marginVertical","lineHeight","marginBottom","borderBottomWidth","borderBottomColor","paddingVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, ScrollView, ActivityIndicator, } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport firebase from '../FirebaseConfig';\n\nimport BasicButton from \"../components/BasicButton\";\nimport LoginSignUpBtn from \"../components/LoginSignUpBtn\";\nimport SnackBar from \"../components/SnackBar\";\n\nexport default function Login({ navigation }) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [snackBarVisible, setSnackBarVisible] = useState(false);\n    const [snackBarText, setSnackBarText] = useState(\"\");\n    const [snackBarType, setSnackBarType] = useState(\"\");\n\n    //function to handle when login btn is clicked on\n    function handleLoginBtnClick() {\n        displayLoader();\n        //doing firebase auth\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(async (user) => {\n                try {\n                    const userId = user.user.uid;\n\n                    //making cookie of the logged user\n                    await AsyncStorage.setItem(\"loggedUserEmail\", email);\n                    await AsyncStorage.setItem(\"loggedUserId\", userId);\n\n                    hideLoader();\n                    displaySnackBar(\"success\", \"Succesfully logged\");\n                    navigation.push('Dashboard');\n                } catch {\n                    hideLoader();\n                    displaySnackBar(\"error\", \"Something went wrong\");\n                }\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n\n                hideLoader();\n                displaySnackBar(\"error\", errorMessage);\n            });\n    }\n\n    //function to handle when signup btn is clicked on\n    function handleSignUpBtnClick() {\n        navigation.navigate('Signup');\n    }\n\n    //function to display snackbar\n    function displaySnackBar(type, text) {\n        setSnackBarType(type);\n        setSnackBarText(text);\n        setSnackBarVisible(true);\n    }\n\n    //function to hide snackbar\n    function hideSnackBar() {\n        setSnackBarVisible(false);\n    }\n\n    //function to toogle loading bar\n    function displayLoader() {\n        setIsLoading(true);\n    }\n\n    function hideLoader() {\n        setIsLoading(false);\n    }\n\n    //component rendering\n    return (\n        <>\n            <ScrollView style={styles.container}>\n                <View style={styles.form}>\n                    <Text style={styles.label}>Email Address</Text>\n                    <TextInput\n                        style={styles.inputField}\n                        keyboardType=\"email-address\"\n                        placeholder=\"Enter your registered email\"\n                        value={email}\n                        onChangeText={(val) => setEmail(val)}\n                    />\n\n                    <View style={styles.divider}></View>\n\n                    <Text style={styles.label}>Password</Text>\n                    <TextInput\n                        style={styles.inputField}\n                        secureTextEntry\n                        placeholder=\"Enter password\"\n                        value={password}\n                        onChangeText={(val) => setPassword(val)}\n                    />\n                </View>\n\n                <BasicButton\n                    text=\"Login\"\n                    onPress={handleLoginBtnClick}\n                />\n\n                {\n                    isLoading ?\n                        <ActivityIndicator style={styles.loader} />\n                        : null\n                }\n\n                <LoginSignUpBtn\n                    customStyle={styles.signup}\n                    text=\"Don’t have an account?\"\n                    btnText=\"Sign up\"\n                    onPress={handleSignUpBtnClick}\n                />\n            </ScrollView>\n\n            {\n                snackBarVisible ?\n                    <SnackBar\n                        isVisible={snackBarVisible}\n                        text={snackBarText}\n                        type={snackBarType}\n                        onClose={hideSnackBar}\n                    />\n                    : null\n            }\n        </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        marginTop: 0,\n        paddingHorizontal: 30,\n    },\n\n    title: {\n        fontWeight: '500',\n        fontSize: 20,\n        letterSpacing: 0.1,\n        color: '#2E2E2E',\n    },\n\n    form: {\n        marginVertical: 35,\n    },\n\n    label: {\n        fontSize: 16,\n        lineHeight: 18,\n        color: '#666666',\n        marginBottom: 3,\n    },\n\n    inputField: {\n        fontSize: 14,\n        borderBottomWidth: 1,\n        borderBottomColor: '#BFBFBF',\n        paddingVertical: 6,\n    },\n\n    divider: {\n        paddingVertical: 8,\n    },\n\n    loader: {\n        marginTop: 10,\n    },\n\n    signup: {\n        marginTop: 40,\n    }\n});\n"]},"metadata":{},"sourceType":"module"}