{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\broy9\\\\OneDrive\\\\Desktop\\\\TOPPR\\\\Quizmania-Level3-main\\\\src\\\\screens\\\\Profile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { PieChart } from 'react-native-chart-kit';\nimport BasicButton from \"../components/BasicButton\";\nexport default function Profile() {\n  var _useState = useState(\"http://2.bp.blogspot.com/-QWj2Wq45014/TzNOfQezNqI/AAAAAAAAAIY/Lvy0m7ZtWRM/s1600/12.jpg\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasImageChanged = _useState4[0],\n      setHasImageChanged = _useState4[1];\n\n  var _useState5 = useState(\"Iron Man\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"tony.stark@iron.man\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(\"9876543210\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phoneNo = _useState10[0],\n      setPhoneNo = _useState10[1];\n\n  var _useState11 = useState(\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy \"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      aboutYou = _useState12[0],\n      setAboutYou = _useState12[1];\n\n  var _useState13 = useState({\n    \"total\": 18,\n    \"correct\": 10,\n    \"incorrect\": 8\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      performanceData = _useState14[0],\n      setPerformanceData = _useState14[1];\n\n  function handleSaveBtnClick() {\n    console.log(\"save btn clicked\");\n  }\n\n  function handleProfilePicEditBtnClick() {\n    var result;\n    return _regeneratorRuntime.async(function handleProfilePicEditBtnClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"edit profile pic btn clicked\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              quality: 1\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setHasImageChanged(true);\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Profile\"), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleProfilePicEditBtnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: require(\"./edit.png\"),\n    style: styles.editIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Name\"), React.createElement(TextInput, {\n    style: styles.inputField,\n    placeholder: \"Enter your name\",\n    value: name,\n    onChangeText: function onChangeText(val) {\n      return setName(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Email Address\"), React.createElement(TextInput, {\n    style: styles.inputField,\n    keyboardType: \"email-address\",\n    placeholder: \"Enter your registered email\",\n    value: email,\n    onChangeText: function onChangeText(val) {\n      return setEmail(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Phone Number\"), React.createElement(TextInput, {\n    style: styles.inputField,\n    keyboardType: \"number-pad\",\n    placeholder: \"Enter phone number\",\n    value: phoneNo,\n    onChangeText: function onChangeText(val) {\n      return setPhoneNo(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"About Yourself\"), React.createElement(TextInput, {\n    style: styles.inputField,\n    multiline: true,\n    placeholder: \"describe yourself\",\n    value: aboutYou,\n    onChangeText: function onChangeText(val) {\n      return setAboutYou(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Performance\"), React.createElement(Text, {\n    style: styles.totalData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Total attempted: \", performanceData.total), React.createElement(View, {\n    style: styles.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, React.createElement(PieChart, {\n    data: [{\n      name: 'Correct',\n      population: performanceData.correct,\n      color: '#34A853',\n      legendFontColor: '#34A853',\n      legendFontSize: 14\n    }, {\n      name: 'Incorrect',\n      population: performanceData.incorrect,\n      color: '#EB4335',\n      legendFontColor: '#EB4335',\n      legendFontSize: 14\n    }],\n    width: Dimensions.get(\"screen\").width,\n    height: 220,\n    chartConfig: {\n      backgroundColor: '#e26a00',\n      backgroundGradientFrom: '#fb8c00',\n      backgroundGradientTo: '#ffa726',\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      }\n    },\n    accessor: \"population\",\n    backgroundColor: \"transparent\",\n    paddingLeft: \"20\",\n    absolute: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), React.createElement(BasicButton, {\n    text: \"Save\",\n    onPress: handleSaveBtnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    marginTop: 60,\n    paddingHorizontal: 30\n  },\n  title: {\n    fontWeight: '500',\n    fontSize: 20,\n    letterSpacing: 0.1,\n    color: '#2E2E2E'\n  },\n  form: {\n    marginTop: 35\n  },\n  imageContainer: {\n    width: 120,\n    height: 120,\n    alignSelf: \"center\",\n    shadowColor: 'grey',\n    shadowOpacity: .8,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    elevation: 10\n  },\n  image: {\n    alignSelf: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 1000\n  },\n  editIcon: {\n    width: 20,\n    height: 20,\n    bottom: 0,\n    right: 0\n  },\n  label: {\n    fontSize: 16,\n    lineHeight: 18,\n    color: '#666666',\n    marginBottom: 3\n  },\n  inputField: {\n    fontSize: 14,\n    borderBottomWidth: 1,\n    borderBottomColor: '#BFBFBF',\n    paddingVertical: 6\n  },\n  divider: {\n    paddingVertical: 8\n  },\n  chartContainer: {\n    alignItems: \"center\"\n  },\n  totalData: {\n    fontWeight: '500',\n    fontSize: 15,\n    lineHeight: 20,\n    color: '#757575',\n    marginVertical: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/broy9/OneDrive/Desktop/TOPPR/Quizmania-Level3-main/src/screens/Profile.js"],"names":["React","useState","ImagePicker","PieChart","BasicButton","Profile","image","setImage","hasImageChanged","setHasImageChanged","name","setName","email","setEmail","phoneNo","setPhoneNo","aboutYou","setAboutYou","performanceData","setPerformanceData","handleSaveBtnClick","console","log","handleProfilePicEditBtnClick","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","quality","result","cancelled","uri","styles","container","title","form","imageContainer","require","editIcon","divider","label","inputField","val","totalData","total","chartContainer","population","correct","color","legendFontColor","legendFontSize","incorrect","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","style","borderRadius","StyleSheet","create","flex","marginTop","paddingHorizontal","fontWeight","fontSize","letterSpacing","height","alignSelf","shadowColor","shadowOpacity","shadowOffset","elevation","bottom","right","lineHeight","marginBottom","borderBottomWidth","borderBottomColor","paddingVertical","alignItems","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, ScrollView, TouchableOpacity, Image, Dimensions } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { PieChart } from 'react-native-chart-kit'\nimport BasicButton from \"../components/BasicButton\";\n\nexport default function Profile() {\n    const [image, setImage] = useState(\"http://2.bp.blogspot.com/-QWj2Wq45014/TzNOfQezNqI/AAAAAAAAAIY/Lvy0m7ZtWRM/s1600/12.jpg\");\n    const [hasImageChanged, setHasImageChanged] = useState(false);\n\n    const [name, setName] = useState(\"Iron Man\");\n    const [email, setEmail] = useState(\"tony.stark@iron.man\");\n    const [phoneNo, setPhoneNo] = useState(\"9876543210\");\n    const [aboutYou, setAboutYou] = useState(\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy \");\n\n    const [performanceData, setPerformanceData] = useState({\n        \"total\": 18,\n        \"correct\": 10,\n        \"incorrect\": 8,\n    });\n\n    //function to handle when login btn is clicked on\n    function handleSaveBtnClick() {\n        console.log(\"save btn clicked\");\n    }\n\n    //function to handle when profile pic edit btn is clicked on\n    async function handleProfilePicEditBtnClick() {\n        console.log(\"edit profile pic btn clicked\");\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            quality: 1,\n        });\n\n        if (!result.cancelled) {\n            setHasImageChanged(true);\n            setImage(result.uri);\n        }\n    }\n\n    //component rendering\n    return (\n        <ScrollView style={styles.container}>\n            <Text style={styles.title}>Profile</Text>\n\n            <View style={styles.form}>\n                <View style={styles.imageContainer}>\n                    <Image source={{ uri: image }} style={styles.image} />\n                    <TouchableOpacity onPress={handleProfilePicEditBtnClick}>\n                        <Image source={require('./edit.png')} style={styles.editIcon} />\n                    </TouchableOpacity>\n                </View>\n                <View style={styles.divider}></View>\n\n                <Text style={styles.label}>Name</Text>\n                <TextInput\n                    style={styles.inputField}\n                    placeholder=\"Enter your name\"\n                    value={name}\n                    onChangeText={(val) => setName(val)}\n                />\n                <View style={styles.divider}></View>\n\n                <Text style={styles.label}>Email Address</Text>\n                <TextInput\n                    style={styles.inputField}\n                    keyboardType=\"email-address\"\n                    placeholder=\"Enter your registered email\"\n                    value={email}\n                    onChangeText={(val) => setEmail(val)}\n                />\n                <View style={styles.divider}></View>\n\n                <Text style={styles.label}>Phone Number</Text>\n                <TextInput\n                    style={styles.inputField}\n                    keyboardType=\"number-pad\"\n                    placeholder=\"Enter phone number\"\n                    value={phoneNo}\n                    onChangeText={(val) => setPhoneNo(val)}\n                />\n                <View style={styles.divider}></View>\n\n                <Text style={styles.label}>About Yourself</Text>\n                <TextInput\n                    style={styles.inputField}\n                    multiline\n                    placeholder=\"describe yourself\"\n                    value={aboutYou}\n                    onChangeText={(val) => setAboutYou(val)}\n                />\n                <View style={styles.divider}></View>\n            </View>\n\n            <Text style={styles.label}>Performance</Text>\n            <Text style={styles.totalData}>Total attempted: {performanceData.total}</Text>\n            <View style={styles.chartContainer}>\n                <PieChart\n                    data={[\n                        {\n                            name: 'Correct',\n                            population: performanceData.correct,\n                            color: '#34A853',\n                            legendFontColor: '#34A853',\n                            legendFontSize: 14,\n                        },\n                        {\n                            name: 'Incorrect',\n                            population: performanceData.incorrect,\n                            color: '#EB4335',\n                            legendFontColor: '#EB4335',\n                            legendFontSize: 14,\n                        }\n                    ]}\n                    width={Dimensions.get(\"screen\").width}\n                    height={220}\n                    chartConfig={{\n                        backgroundColor: '#e26a00',\n                        backgroundGradientFrom: '#fb8c00',\n                        backgroundGradientTo: '#ffa726',\n                        decimalPlaces: 2, // optional, defaults to 2dp\n                        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                        style: {\n                            borderRadius: 16\n                        }\n                    }}\n\n                    accessor=\"population\"\n                    backgroundColor=\"transparent\"\n                    paddingLeft=\"20\"\n                    absolute\n                />\n            </View>\n\n            <View style={styles.divider}></View>\n            <BasicButton\n                text=\"Save\"\n                onPress={handleSaveBtnClick}\n            />\n            <View style={styles.divider}></View>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        marginTop: 60,\n        paddingHorizontal: 30,\n    },\n\n    title: {\n        fontWeight: '500',\n        fontSize: 20,\n        letterSpacing: 0.1,\n        color: '#2E2E2E',\n    },\n\n    form: {\n        marginTop: 35,\n    },\n\n    imageContainer: {\n        width: 120,\n        height: 120,\n        alignSelf: \"center\",\n        shadowColor: 'grey',\n        shadowOpacity: .8,\n        shadowOffset: { width: 0, height: 2 },\n        elevation: 10,\n    },\n\n    image: {\n        alignSelf: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: 1000,\n    },\n\n    editIcon: {\n        width: 20,\n        height: 20,\n       \n        bottom: 0,\n        right: 0,\n    },\n\n    label: {\n        fontSize: 16,\n        lineHeight: 18,\n        color: '#666666',\n        marginBottom: 3,\n    },\n\n    inputField: {\n        fontSize: 14,\n        borderBottomWidth: 1,\n        borderBottomColor: '#BFBFBF',\n        paddingVertical: 6,\n    },\n\n    divider: {\n        paddingVertical: 8,\n    },\n\n    chartContainer: {\n        alignItems: \"center\",\n    },\n\n    totalData: {\n        fontWeight: '500',\n        fontSize: 15,\n        lineHeight: 20,\n        color: '#757575',\n        marginVertical: 10,\n    }\n});\n"]},"metadata":{},"sourceType":"module"}